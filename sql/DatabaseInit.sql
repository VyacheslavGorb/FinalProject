-- MySQL Script generated by MySQL Workbench
-- Tue Jul  6 17:04:55 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS = @@UNIQUE_CHECKS, UNIQUE_CHECKS = 0;
SET @OLD_FOREIGN_KEY_CHECKS = @@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS = 0;
SET @OLD_SQL_MODE = @@SQL_MODE, SQL_MODE =
        'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema music_studio
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `music_studio`;

-- -----------------------------------------------------
-- Schema music_studio
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `music_studio` DEFAULT CHARACTER SET utf8;
USE `music_studio`;

-- -----------------------------------------------------
-- Table `music_studio`.`courses`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `music_studio`.`courses`
(
    `id_course`      INT           NOT NULL AUTO_INCREMENT,
    `name`           VARCHAR(45)   NOT NULL,
    `description`    TEXT(3000)    NOT NULL,
    `picture_path`   VARCHAR(45)   NOT NULL,
    `price_per_hour` DECIMAL(6, 2) NOT NULL,
    `is_active`      TINYINT       NOT NULL,
    PRIMARY KEY (`id_course`)
)
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `music_studio`.`user_statuses`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `music_studio`.`user_statuses`
(
    `id_user_status` INT                                     NOT NULL,
    `status`         ENUM ('active', 'inactive', 'on_leave') NOT NULL,
    PRIMARY KEY (`id_user_status`)
)
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `music_studio`.`user_roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `music_studio`.`user_roles`
(
    `id_user_roles` INT                                  NOT NULL,
    `user_rolescol` ENUM ('student', 'teacher', 'admin') NOT NULL,
    PRIMARY KEY (`id_user_roles`)
)
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `music_studio`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `music_studio`.`users`
(
    `id_user`        INT          NOT NULL AUTO_INCREMENT,
    `login`          VARCHAR(20)  NOT NULL,
    `password_hash`  VARCHAR(128) NOT NULL,
    `name`           VARCHAR(20)  NOT NULL,
    `surname`        VARCHAR(20)  NOT NULL,
    `patronymic`     VARCHAR(20)  NOT NULL,
    `email`          VARCHAR(60)  NOT NULL,
    `phone_number`   VARCHAR(13)  NULL,
    `id_user_status` INT          NOT NULL,
    `id_user_roles`  INT          NOT NULL,
    PRIMARY KEY (`id_user`),
    INDEX `fk_users_user_statuses1_idx` (`id_user_status` ASC) VISIBLE,
    INDEX `fk_users_user_roles1_idx` (`id_user_roles` ASC) VISIBLE,
    CONSTRAINT `fk_users_user_statuses1`
        FOREIGN KEY (`id_user_status`)
            REFERENCES `music_studio`.`user_statuses` (`id_user_status`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION,
    CONSTRAINT `fk_users_user_roles1`
        FOREIGN KEY (`id_user_roles`)
            REFERENCES `music_studio`.`user_roles` (`id_user_roles`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
)
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `music_studio`.`comments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `music_studio`.`comments`
(
    `id_comment` INT        NOT NULL AUTO_INCREMENT,
    `id_student` INT        NOT NULL,
    `id_teacher` INT        NOT NULL,
    `content`    TEXT(1000) NULL,
    `date_time`  DATETIME   NOT NULL,
    `rating`     INT        NOT NULL,
    INDEX `fk_comments_user1_idx` (`id_student` ASC) VISIBLE,
    INDEX `fk_comments_user2_idx` (`id_teacher` ASC) VISIBLE,
    PRIMARY KEY (`id_comment`),
    CONSTRAINT `fk_comments_user1`
        FOREIGN KEY (`id_student`)
            REFERENCES `music_studio`.`users` (`id_user`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION,
    CONSTRAINT `fk_comments_user2`
        FOREIGN KEY (`id_teacher`)
            REFERENCES `music_studio`.`users` (`id_user`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
)
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `music_studio`.`subscriptions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `music_studio`.`subscriptions`
(
    `id_subscriptions`      INT  NOT NULL AUTO_INCREMENT,
    `id_student`            INT  NOT NULL,
    `id_course`             INT  NOT NULL,
    `date_start`            DATE NOT NULL,
    `date_end`              DATE NOT NULL,
    `lesson_amount`         INT  NOT NULL,
    `lesson_duration`       TIME NOT NULL,
    `free_transfer_amount`  INT  NOT NULL DEFAULT 0,
    `student_discount`      INT  NOT NULL DEFAULT 0,
    `subscription_discount` INT  NOT NULL DEFAULT 20,
    PRIMARY KEY (`id_subscriptions`),
    INDEX `fk_subscriptions_user1_idx` (`id_student` ASC) VISIBLE,
    INDEX `fk_subscriptions_courses1_idx` (`id_course` ASC) VISIBLE,
    CONSTRAINT `fk_subscriptions_user1`
        FOREIGN KEY (`id_student`)
            REFERENCES `music_studio`.`users` (`id_user`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION,
    CONSTRAINT `fk_subscriptions_courses1`
        FOREIGN KEY (`id_course`)
            REFERENCES `music_studio`.`courses` (`id_course`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
)
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `music_studio`.`teacher_descriptions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `music_studio`.`teacher_descriptions`
(
    `id_teacher`       INT         NOT NULL,
    `self_description` TEXT(3000)  NOT NULL,
    `experience`       INT         NOT NULL,
    `picture_path`     VARCHAR(45) NOT NULL,
    PRIMARY KEY (`id_teacher`),
    CONSTRAINT `fk_table1_users1`
        FOREIGN KEY (`id_teacher`)
            REFERENCES `music_studio`.`users` (`id_user`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
)
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `music_studio`.`lesson_statuses`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `music_studio`.`lesson_statuses`
(
    `id_lesson_statuses` INT                                                                                                           NOT NULL,
    `status`             ENUM ('visited', 'postponed_by_student', 'postponed_by_school', 'missed', 'planned', 'requested', 'rejected') NOT NULL,
    PRIMARY KEY (`id_lesson_statuses`)
)
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `music_studio`.`lesson_schedules`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `music_studio`.`lesson_schedules`
(
    `id_schedule`                       INT      NOT NULL AUTO_INCREMENT,
    `id_student`                        INT      NOT NULL,
    `id_teacher`                        INT      NOT NULL,
    `id_course`                         INT      NOT NULL,
    `date_time`                         DATETIME NOT NULL,
    `duration`                          TIME     NOT NULL,
    `lesson_statuses_idlesson_statuses` INT      NOT NULL,
    PRIMARY KEY (`id_schedule`),
    INDEX `fk_schedule_users1_idx` (`id_student` ASC) VISIBLE,
    INDEX `fk_schedule_users2_idx` (`id_teacher` ASC) VISIBLE,
    INDEX `fk_schedule_courses1_idx` (`id_course` ASC) VISIBLE,
    INDEX `fk_lesson_schedules_lesson_statuses1_idx` (`lesson_statuses_idlesson_statuses` ASC) VISIBLE,
    CONSTRAINT `fk_schedule_users1`
        FOREIGN KEY (`id_student`)
            REFERENCES `music_studio`.`users` (`id_user`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION,
    CONSTRAINT `fk_schedule_users2`
        FOREIGN KEY (`id_teacher`)
            REFERENCES `music_studio`.`users` (`id_user`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION,
    CONSTRAINT `fk_schedule_courses1`
        FOREIGN KEY (`id_course`)
            REFERENCES `music_studio`.`courses` (`id_course`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION,
    CONSTRAINT `fk_lesson_schedules_lesson_statuses1`
        FOREIGN KEY (`lesson_statuses_idlesson_statuses`)
            REFERENCES `music_studio`.`lesson_statuses` (`id_lesson_statuses`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
)
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `music_studio`.`teacher_schedules`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `music_studio`.`teacher_schedules`
(
    `id_teacher`     INT  NOT NULL,
    `day_of_week`    INT  NOT NULL,
    `interval_start` TIME NOT NULL,
    `interval_end`   TIME NOT NULL,
    PRIMARY KEY (`id_teacher`),
    CONSTRAINT `fk_teacher_schedule_users1`
        FOREIGN KEY (`id_teacher`)
            REFERENCES `music_studio`.`users` (`id_user`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
)
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `music_studio`.`teacher_descriptions_has_courses`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `music_studio`.`teacher_descriptions_has_courses`
(
    `id_teacher` INT NOT NULL,
    `id_course`  INT NOT NULL,
    PRIMARY KEY (`id_teacher`, `id_course`),
    INDEX `fk_teacher_descriptions_has_courses_courses1_idx` (`id_course` ASC) VISIBLE,
    INDEX `fk_teacher_descriptions_has_courses_teacher_descriptions1_idx` (`id_teacher` ASC) VISIBLE,
    CONSTRAINT `fk_teacher_descriptions_has_courses_teacher_descriptions1`
        FOREIGN KEY (`id_teacher`)
            REFERENCES `music_studio`.`teacher_descriptions` (`id_teacher`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION,
    CONSTRAINT `fk_teacher_descriptions_has_courses_courses1`
        FOREIGN KEY (`id_course`)
            REFERENCES `music_studio`.`courses` (`id_course`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
)
    ENGINE = InnoDB;


SET SQL_MODE = @OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS = @OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS = @OLD_UNIQUE_CHECKS;
